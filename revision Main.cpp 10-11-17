#include <iostream>
#include "Calculation.h"

using namespace std;

int main()
{
	Calculation finder;
	//cout << finder.eval_expression("7 + a - b + 10") << endl;			// Invalid character input
	//cout << finder.eval_expression("1*3 2") << endl;			// operand follow by operand
	//cout << finder.eval_expression("2++3") << endl;			// This case 2 operand and no operator
	//cout << finder.eval_expression("<3+2") << endl;			// Will give error "expression can't start or end with a binay operator"
	//cout << finder.eval_expression("3+2>") << endl;			// Will give error "" ^
	//cout << finder.eval_expression("3 < 2") << endl;
	//cout << finder.eval_expression("=3+2") << endl;			// Will throw error
	//cout << finder.eval_expression("2 *3 =") << endl;			// will throw error "expression can't start or end with a binary operator"
	//cout << finder.eval_expression(")2 + 3") << endl;
	cout << finder.eval_expression("2 + 3(") << endl;		// This need to thrown an error, but It doesn't and I think i know why
	/*
	cout << finder.eval_expression("1+12 + 15") << endl;
	cout << finder.eval_expression("1+2*3") << endl;
	cout << finder.eval_expression("2+2^2*3") << endl;
	cout << finder.eval_expression("1==2") << endl;
	cout << finder.eval_expression("1+3>2") << endl;
	cout << finder.eval_expression("(4>=4)&&0") << endl;
	cout << finder.eval_expression("(1+2) * 3 ") << endl;
	cout << finder.eval_expression("++++2-5*(3^2)") << endl;
	cout << finder.eval_expression("--7----8") << endl;
	cout << finder.eval_expression("(3^2)+++----75") << endl;
	cout << finder.eval_expression("(3*(6+(3+2+5+(6+2)))") << endl;*/

	system("pause");
	return 0;
}
